# -*- coding: utf-8 -*-
"""Analyse_erreurs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mR9C-Wf8C2_gLLtroxFeEcgF5Q7UQJ5G

#Analyse des erreurs
"""

import pandas as pd
from sklearn.metrics import roc_auc_score, confusion_matrix, classification_report
import matplotlib.pyplot as plt
import seaborn as sns

"""Chargement des donnees et des predictions"""

dossier_donnees = "./Data/"
chemin_train = dossier_donnees + "train_feature_engineering.csv"
chemin_predictions = dossier_donnees + "test_predictions_autogluon.csv"

train = pd.read_csv(chemin_train)
predictions = pd.read_csv(chemin_predictions)

"""Calculer les erreurs"""

# Ici, nous utilisons le score ROC AUC pour évaluer les performances du modèle.
cible = 'Exited'
y_true = train[cible]
y_pred = predictions['Predictions']

roc_auc = roc_auc_score(y_true, y_pred)
print(f"ROC AUC Score : {roc_auc:.4f}")

"""Matrice de confusion"""

# Ici, nous affichons une matrice de confusion pour analyser les erreurs du modèle.
seuil = 0.5
y_pred_classe = (y_pred >= seuil).astype(int)
matrice_confusion = confusion_matrix(y_true, y_pred_classe)

plt.figure(figsize=(8, 6))
sns.heatmap(matrice_confusion, annot=True, fmt="d", cmap="Blues", cbar=False)
plt.title("Matrice de confusion")
plt.xlabel("Prédictions")
plt.ylabel("Vérités")
plt.show()

"""Rapport de classification"""

# Ici, nous affichons un rapport détaillé des performances par classe.
rapport = classification_report(y_true, y_pred_classe)
print("Rapport de classification :\n")
print(rapport)

"""Analyse des erreurs"""

# Visualisation des distributions des scores pour les prédictions correctes et incorrectes.
erreurs = train.copy()
erreurs['Score_Prediction'] = y_pred
erreurs['Prediction_Correcte'] = (y_true == y_pred_classe)

plt.figure(figsize=(8, 6))
sns.histplot(data=erreurs, x='Score_Prediction', hue='Prediction_Correcte', kde=True, bins=30)
plt.title("Distribution des scores de prédiction")
plt.xlabel("Score de prédiction")
plt.ylabel("Fréquence")
plt.show()