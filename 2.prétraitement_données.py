# -*- coding: utf-8 -*-
"""Prétraitement_données.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H30pUg1MCUfIPcgF2RVUohF-avsJFj6f

#Prétraitement des données
"""

import pandas as pd
import numpy as np

"""Chemins des fichiers"""

dossier_donnees = "./Data/"
chemin_train = dossier_donnees + "train.csv"
chemin_test = dossier_donnees + "test.csv"

"""Chargement des donnees"""

train = pd.read_csv(chemin_train)
test = pd.read_csv(chemin_test)

"""Gestion des valeurs manquantes

"""

# Ici, nous remplissons les valeurs manquantes avec la moyenne pour les colonnes numeriques.
pourcentage_manquant = train.isnull().mean() * 100
colonnes_a_remplir = pourcentage_manquant[pourcentage_manquant > 0].index

for col in colonnes_a_remplir:
    if train[col].dtype in ['int64', 'float64']:
        train[col].fillna(train[col].mean(), inplace=True)
        test[col].fillna(test[col].mean(), inplace=True)
    else:
        train[col].fillna("Inconnu", inplace=True)
        test[col].fillna("Inconnu", inplace=True)

"""Encodage des variables categoriques"""

# Ici, nous encodons les variables categoriques en utilisant des valeurs numeriques.
categoricals = train.select_dtypes(include=['object']).columns
for col in categoricals:
    categories = train[col].astype('category').cat.categories
    train[col] = train[col].astype('category').cat.codes
    test[col] = test[col].map(lambda x: categories.get_loc(x) if x in categories else -1)

"""Standardisation des colonnes numeriques"""

# Ici, nous appliquons une standardisation pour les colonnes numeriques.
numeriques = train.select_dtypes(include=['int64', 'float64']).columns
scaler = StandardScaler()
train[numeriques] = scaler.fit_transform(train[numeriques])
test[numeriques] = scaler.transform(test[numeriques])

"""Sauvegarde des donnees traitees"""

train.to_csv(dossier_donnees + "train_pretraite.csv", index=False)
test.to_csv(dossier_donnees + "test_pretraite.csv", index=False)