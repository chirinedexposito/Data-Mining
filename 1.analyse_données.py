# -*- coding: utf-8 -*-
"""Analyse_données.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_RqclfF8fhzJB3d4V0XHDKMxC4w2eNqJ

# Analyse des donnees
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Chargement des donnees traitees"""

dossier_donnees = "./Data/"
chemin_train = dossier_donnees + "train_pretraite.csv"

train = pd.read_csv(chemin_train)

"""Distribution des classes"""

# Ici, nous visualisons la repartition des classes cible.
plt.figure(figsize=(6, 4))
sns.countplot(x='Exited', data=train)
plt.title("Répartition des classes (Exited)")
plt.xlabel("Classe")
plt.ylabel("Nombre")
plt.show()

"""Matrice de correlation"""

# Ici, nous affichons la matrice de correlation pour les variables numeriques.
plt.figure(figsize=(12, 8))
correlation_matrix = train.corr()
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap="coolwarm")
plt.title("Matrice de corrélation")
plt.show()

"""Analyse des distributions"""

# Ici, nous visualisons les distributions des variables numeriques les plus importantes.
variables_a_visualiser = train.select_dtypes(include=['float64', 'int64']).columns[:5]

for variable in variables_a_visualiser:
    plt.figure(figsize=(6, 4))
    sns.histplot(train[variable], kde=True, bins=30)
    plt.title(f"Distribution de {variable}")
    plt.xlabel(variable)
    plt.ylabel("Fréquence")
    plt.show()

"""Analyse bivariée"""

# Ici, nous examinons les relations entre les variables numeriques et la classe cible.
for variable in variables_a_visualiser:
    plt.figure(figsize=(6, 4))
    sns.boxplot(x='Exited', y=variable, data=train)
    plt.title(f"Relation entre {variable} et Exited")
    plt.xlabel("Exited")
    plt.ylabel(variable)
    plt.show()